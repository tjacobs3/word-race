{"version":3,"sources":["components/splash_header.tsx","components/splash.tsx","components/word_race/constants.ts","components/word_race/board/tile.tsx","components/word_race/board/row.tsx","components/word_race/word_grid.tsx","components/word_race/helpers/word_helpers.ts","components/word_race/word_input.tsx","components/word_race/score_board/score.tsx","components/word_race/score_board.tsx","components/word_race/score_board/timer.tsx","components/word_race/score_board/count_down.tsx","components/word_race/ui/player_list.tsx","components/word_race/ui/game_end.tsx","components/word_race/score_board/previous_words.tsx","components/word_race/ui/mobile_score_board.tsx","components/word_race/ui/mobile_count_down.tsx","components/word_race/ui/mobile_previous_word.tsx","components/word_race/ui/game_start_header.tsx","components/word_race/name_input.tsx","components/word_race/word_race.tsx","components/word_race/game.tsx","components/join_game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SplashHeader","errors","length","className","Alert","variant","map","error","Splash","history","useHistory","location","useLocation","initialErrors","state","notFound","useState","creatingOrJoiningGame","setCreatingOrJoiningGame","roomCode","setRoomCode","setErrors","showAbout","setShowAbout","handleError","axios","isAxiosError","response","data","Container","disabled","onClick","post","process","withCredentials","then","push","catch","Row","Col","md","Form","Control","type","placeholder","value","onChange","e","target","sm","Button","icon","faQuestionCircle","Modal","centered","show","onHide","Body","href","faLinkedin","faGithub","ACTION__START_GAME","ACTION__SUBMIT_GUESS","pulseAnimation","keyframes","pulse","PulseDiv","styled","div","Tile","letter","Component","resultClass","result","couldNotSubmit","content","wordLength","rowEl","useRef","useEffect","current","classList","add","setTimeout","remove","tiles","i","ref","WordGrid","previousGuesses","rows","numMatching","guess","count","forEach","ENTER_STRING","BACKSPACE_STRING","AllWords","AllWordsDictionary","KEYBOARD_LAYOUT","default","KEYBOARD_DISPLAY","WordInput","alignChildren","children","freeze","roundNumber","onSubmit","word","setWord","setCouldNotSubmit","isFinished","find","every","buttonThemes","useMemo","guesses","results","letterGuess","letterResults","incorrectButtons","class","buttons","wrongSpotButtons","correctButtons","each","key","undefined","filter","theme","guessesToButtonTheme","handleKey","useCallback","substring","toLowerCase","handleUserKeyPress","event","keyString","keyCode","window","addEventListener","removeEventListener","currentGuess","split","Fragment","SwitchTransition","CSSTransition","addEndListener","node","done","classNames","concat","layoutName","layout","buttonTheme","display","onKeyPress","flipInXAnimation","flipInX","FlipDiv","Score","score","ComponentType","ScoreBoard","gameState","playerId","players","player","name","lastGuess","playerGuesses","game","id","nextWordAt","maxCorrect","max","maxCorrectGuesses","maxWrongSpot","maxWrongSpotGuesses","findBestGuess","cloneDeep","scores","calculateTimeLeft","toTime","currentTime","Date","difference","getTime","Math","floor","Timer","timeLeft","setTimeLeft","interval","setInterval","clearInterval","fadeInAnimation","fadeIn","FadeInDiv","CountDown","roundEndAt","text","fadeInUp","h3","PlayerList","playerList","GameEnd","onStartNewGame","reverse","sortBy","faTrophy","size","FadeDiv","PreviousWords","previousWords","MobileScoreBoard","sortedPlayers","nextHighestPlayer","MobileCountDown","MobilePreviousWord","GameStartHeader","header","isOwner","gameStartAt","NameInput","socket","setName","sending","setSending","setError","Group","newName","emit","Text","WordRace","ownerId","props","playerForSelf","hasName","startGame","submitGuess","this","on","nextState","gameStartIn","now","nextWordIn","roundEndIn","setState","gameEnded","renderGame","renderControls","React","Game","useParams","setPlayerId","secret","setSecret","setSocket","status","replace","newSocket","io","query","admin","JoinGame","joinGame","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.620e424b.chunk.js","sourcesContent":["import { Alert } from \"react-bootstrap\"\n\ntype Props = {\n  errors: string[]\n}\n\nexport default function SplashHeader({ errors }: Props) {\n  return (\n    <div>\n      {errors.length > 0 && (\n        <div className=\"text-center\">\n          <Alert className=\"d-inline-block\" variant=\"info\">\n            {errors.map(error => <div key={error}>{error}</div>)}\n          </Alert>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useState } from \"react\"\nimport { Col, Container, Form, Row, Button, Modal } from \"react-bootstrap\"\nimport axios, { AxiosError } from 'axios';\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport SplashHeader from \"./splash_header\";\n\nexport default function Splash() {\n  const history = useHistory();\n  const location = useLocation<{ notFound?: string }>();\n  let initialErrors: string[] = [];\n\n  if (location.state?.notFound) {\n    initialErrors = [`Sorry, we could not find a game with that code (${location.state.notFound}).`]\n  }\n\n  const [creatingOrJoiningGame, setCreatingOrJoiningGame] = useState<boolean>(false);\n  const [roomCode, setRoomCode] = useState<string>('');\n  const [errors, setErrors] = useState<string[]>(initialErrors);\n  const [showAbout, setShowAbout] = useState(false);\n\n  const handleError = (error: Error | AxiosError) => {\n    if (axios.isAxiosError(error))  {\n      setErrors(error.response?.data?.errors || []);\n    }\n    setCreatingOrJoiningGame(false);\n  }\n\n  const createGame = () => {\n    setCreatingOrJoiningGame(true);\n\n    axios.post(`${process.env.REACT_APP_API_ROOT || ''}/create`, { }, { withCredentials: true })\n      .then((response) => history.push(`/game/${response.data.roomCode}`))\n      .catch(handleError);\n  }\n\n  const joinGame = () => {\n    setCreatingOrJoiningGame(true);\n\n    axios.post(`${process.env.REACT_APP_API_ROOT || ''}/join_room`, { roomCode }, { withCredentials: true })\n      .then((response) => history.push(`/game/${response.data.roomCode}`))\n      .catch(handleError);\n  }\n\n  const quickPlay = () => {\n    setCreatingOrJoiningGame(true);\n\n    axios.post(`${process.env.REACT_APP_API_ROOT || ''}/quick_play`, { }, { withCredentials: true })\n      .then((response) => history.push(`/game/${response.data.roomCode}`))\n      .catch(handleError);\n  }\n\n  return (\n    <div className=\"splash\">\n      <Container>\n        <div className=\"px-4 text-center \">\n          <h1 className=\"display-4 fw-bold\">Wordversary.</h1>\n          <div className=\"col-lg-6 mx-auto\">\n            <p className=\"lead\">The head to head WORDLE competition!</p>\n            <SplashHeader errors={errors} />\n            <button\n              className=\"play-button draw-border my-5\"\n              disabled={creatingOrJoiningGame}\n              onClick={quickPlay}\n            >\n              Quick Play\n            </button>\n            <div className=\"mb-5\">\n              <h2 className=\"mt-0 mb-3 text-center\">Join a Game</h2>\n              <Row className=\"justify-content-md-center\">\n                <Col className=\"py-2 py-md-0\" md={4}>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Room Code\"\n                    value={roomCode}\n                    onChange={e => setRoomCode(e.target.value)}\n                  />\n                </Col>\n                <Col className=\"py-2 py-md-0 text-center\" sm=\"auto\">\n                  <Button disabled={creatingOrJoiningGame} variant=\"light\" onClick={joinGame} >\n                    Join\n                  </Button>\n                </Col>\n              </Row>\n            </div>\n\n            <div>\n              <h2 className=\"mt-0 text-center\">Or Host a Private Game</h2>\n              <Row className=\"justify-content-md-center\">\n                <Col className=\"text-center\" sm=\"auto\">\n                  <Button disabled={creatingOrJoiningGame} variant=\"light\" onClick={createGame} >\n                    Host Game\n                  </Button>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"mt-5 intro-text\">\n            <h4>How it works:</h4>\n            <p><strong>The first to 10 points wins.</strong> Here is how you can score points -</p>\n            <div><strong>2 points</strong> for solving the word first.</div>\n            <div><strong>1 point</strong> for solving the word in the remaining time (if you didn't solve first).</div>\n            <div><strong>1 point</strong> for having the most correct letters if no one solves the word.</div>\n          </div>\n        </div>\n        <div className=\"text-center mt-3\">\n          <Button variant=\"link\" onClick={() => setShowAbout(true)}>\n            <FontAwesomeIcon className=\"me-2\" icon={faQuestionCircle} />\n            About\n          </Button>\n        </div>\n        <Modal centered show={showAbout} onHide={() => setShowAbout(false)}>\n          <Modal.Body className=\"text-center\">\n            <h4>Built By</h4>\n            <a href=\"https://www.linkedin.com/in/thomas-jacobs-8b1b5021/\">\n              <FontAwesomeIcon className=\"me-2\" icon={faLinkedin} />\n            </a>\n            <a href=\"https://github.com/tjacobs3\">\n              <FontAwesomeIcon className=\"me-2\" icon={faGithub} />\n              Thomas Jacobs\n            </a>\n            <h5 className=\"mt-3\">\n              Thank you to the original <a href=\"https://www.powerlanguage.co.uk/wordle/\">Wordle</a>\n            </h5>\n          </Modal.Body>\n        </Modal>\n      </Container>\n    </div>\n  );\n}\n","export const ACTION__START_GAME = 'start_game';\nexport const ACTION__SUBMIT_GUESS = 'submit_guess';\nexport const ACTION__SET_NAME = 'set_name';\n\nexport const CORRECT = 2;\nexport const WRONG_SPOT = 1;\nexport const INCORRECT = 0;\n\nexport type LetterGuess = { letter: string, result?: number };\nexport type Guesses = { [index: string]: LetterGuess[][]; }\n\nexport type Player = {\n  id: string;\n  name?: string;\n}\n\ninterface BaseWordRaceGameState {\n  guesses: Guesses,\n  scores: { [index: string]: number },\n  gameEnded: boolean,\n  previousWords: string[],\n  roundNumber: number\n}\n\ninterface WordRaceGameState extends BaseWordRaceGameState {\n  nextWordAt: Date | undefined,\n  roundEndAt: Date | undefined,\n}\n\ninterface IncomingWordRaceGameState extends BaseWordRaceGameState {\n  nextWordIn: number | undefined,\n  roundEndIn: number | undefined,\n}\n\nexport interface GameState {\n  players: Player[];\n  ownerId: string;\n  gameStartAt?: Date;\n  game?: WordRaceGameState;\n}\n\nexport interface IncomingGameState {\n  players: Player[];\n  ownerId: string;\n  gameStartIn?: number;\n  game?: IncomingWordRaceGameState;\n}\n","import styled, { keyframes } from 'styled-components';\nimport { pulse } from 'react-animations';\nimport { CORRECT, INCORRECT, LetterGuess, WRONG_SPOT } from '../constants';\n\nconst pulseAnimation = keyframes`${pulse}`;\n\nconst PulseDiv = styled.div`\n  animation: 0.2s ${pulseAnimation};\n`;\n\ntype Props = {\n  letter?: LetterGuess;\n}\n\nexport default function Tile({ letter }: Props) {\n  const Component = letter ? PulseDiv : 'div';\n\n  let resultClass = '';\n\n  if (letter?.result === CORRECT) resultClass = 'correct';\n  if (letter?.result === INCORRECT) resultClass = 'incorrect';\n  if (letter?.result === WRONG_SPOT) resultClass = 'wrong-spot';\n\n  return <Component className={`cell mx-1 ${resultClass}`}>{letter?.letter}</Component>;\n}\n","import { useEffect, useRef } from 'react';\nimport { LetterGuess } from '../constants';\nimport Tile from './tile';\n\ntype Props = {\n  couldNotSubmit?: boolean;\n  wordLength: number;\n  content?: LetterGuess[];\n}\n\nexport default function Row({ couldNotSubmit, content, wordLength }: Props) {\n  const rowEl = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (couldNotSubmit) {\n      // Have to do this head-shake through directly manipulating the DOM. If I do this by changing the class\n      // on the rendered div it will change the dom structure which causes all child animations to rerun as well\n      rowEl.current?.classList.add('head-shake');\n      setTimeout(() => rowEl.current?.classList.remove('head-shake'), 1000);\n    }\n  }, [couldNotSubmit])\n\n\n  const tiles = [];\n\n  for(let i = 0; i < wordLength; i++) {\n    tiles.push(\n      <Tile letter={content?.[i]} key={i} />\n    );\n  }\n\n  return (\n    <div className=\"my-2 d-flex\" ref={rowEl}>\n      {tiles}\n    </div>\n  );\n}\n","import Row from './board/row';\nimport { LetterGuess } from './constants';\n\ntype Props = {\n  wordLength: number;\n  previousGuesses: LetterGuess[][];\n  couldNotSubmit?: boolean;\n}\n\nexport default function WordGrid({ couldNotSubmit, previousGuesses, wordLength }: Props) {\n  const rows = [];\n\n  for(let i = 0; i < 6; i++){\n    rows.push(\n      <Row\n        couldNotSubmit={!!(couldNotSubmit && i === (previousGuesses.length - 1))}\n        content={previousGuesses[i]}\n        key={i}\n        wordLength={wordLength}\n      />\n    );\n  }\n\n  return (\n    <div>\n      {rows}\n    </div>\n  );\n}\n","import { each, filter, max } from \"lodash\";\nimport { CORRECT, INCORRECT, LetterGuess, WRONG_SPOT } from \"../constants\";\n\nfunction letterResults(guesses: LetterGuess[][]): { [index: string]: number | undefined } {\n  const results: { [index: string]: number | undefined } = {};\n\n  guesses.forEach((guess) => {\n    guess.forEach((letterGuess) => {\n      if (!results[letterGuess.letter]) results[letterGuess.letter] = letterGuess.result;\n\n      if (results[letterGuess.letter] === WRONG_SPOT && letterGuess.result === CORRECT) {\n        results[letterGuess.letter] = letterGuess.result;\n      }\n    });\n  });\n\n  return results;\n}\n\n\nexport function guessesToButtonTheme(guesses: LetterGuess[][]): { class: string, buttons: string }[] {\n  const results = letterResults(guesses);\n\n  const incorrectButtons = {\n    class: 'hg-incorrect',\n    buttons: ''\n  }\n\n  const wrongSpotButtons = {\n    class: 'hg-wrong-spot',\n    buttons: ''\n  }\n\n  const correctButtons = {\n    class: 'hg-correct',\n    buttons: ''\n  }\n\n  each(results, (result, key) => {\n    if (result === undefined) return;\n\n    switch (result) {\n      case INCORRECT:\n        incorrectButtons.buttons += ` ${key}`;\n        break;\n      case WRONG_SPOT:\n        wrongSpotButtons.buttons += ` ${key}`;\n        break;\n      case CORRECT:\n        correctButtons.buttons += ` ${key}`;\n    }\n  });\n\n  return filter([incorrectButtons, wrongSpotButtons, correctButtons], theme => theme.buttons.length > 0);\n}\n\nexport function numMatching(guess: LetterGuess[], result: number): number {\n  let count = 0;\n  guess.forEach((letter) => {\n    if (letter.result === result) count += 1;\n  })\n\n  return count;\n}\n\nexport function findBestGuess(guesses: LetterGuess[][]): LetterGuess[] {\n  const maxCorrect = max(guesses.map(guess => numMatching(guess, CORRECT)));\n  const maxCorrectGuesses = guesses.filter(guess => numMatching(guess, CORRECT) === maxCorrect);\n\n  const maxWrongSpot = max(maxCorrectGuesses.map(guess => numMatching(guess, WRONG_SPOT)));\n  const maxWrongSpotGuesses = maxCorrectGuesses.filter(guess => numMatching(guess, WRONG_SPOT) === maxWrongSpot);\n\n  return maxWrongSpotGuesses[maxWrongSpotGuesses.length - 1] || [];\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport Keyboard from \"react-simple-keyboard\";\nimport \"react-simple-keyboard/build/css/index.css\";\nimport { SwitchTransition, CSSTransition } from 'react-transition-group';\n\nimport WordGrid from './word_grid';\nimport { CORRECT, LetterGuess } from \"./constants\";\nimport { every, find } from 'lodash';\nimport AllWordsDictionary from './assets/all_words.json';\nimport React from 'react';\nimport { guessesToButtonTheme } from './helpers/word_helpers';\n\nconst DELETE = 46;\nconst BACKSPACE = 8;\nconst ENTER = 13;\nconst ENTER_STRING = '{ent}';\nconst BACKSPACE_STRING = '{backspace}';\n\nconst AllWords = AllWordsDictionary as any;\n\nconst KEYBOARD_LAYOUT = {\n  default: [\n    \"Q W E R T Y U I O P\",\n    \"A S D F G H J K L\",\n    `${ENTER_STRING} Z X C V B N M ${BACKSPACE_STRING}`\n  ]\n}\nconst KEYBOARD_DISPLAY = {\n  [ENTER_STRING]: \"ENTER\",\n  [BACKSPACE_STRING]: \"⌫\"\n}\n\ntype Props = {\n  alignChildren?: React.ReactNode;\n  freeze: boolean;\n  children?: React.ReactNode;\n  onSubmit: (word: string) => void;\n  wordLength: number;\n  previousGuesses: LetterGuess[][];\n  roundNumber: number;\n}\n\nexport default function WordInput({\n  alignChildren, children, freeze, previousGuesses, wordLength, roundNumber, onSubmit\n}: Props) {\n  const [word, setWord] = useState('');\n  const [couldNotSubmit, setCouldNotSubmit] = useState(false);\n\n  const isFinished = freeze || !!find(previousGuesses, (guess) => {\n    return every(guess, ({ result }) => result === CORRECT);\n  });\n\n  const buttonThemes = useMemo(() => guessesToButtonTheme(previousGuesses), [previousGuesses]);\n\n  const handleKey = useCallback((key: string) => {\n    if (isFinished) return;\n\n    switch (key) {\n      case ENTER_STRING:\n\n        if (word.length === wordLength && !!AllWords[word]) {\n          onSubmit(word);\n          setWord('');\n        } else {\n          setCouldNotSubmit(true);\n          setTimeout(() => setCouldNotSubmit(false), 1000);\n        }\n        break;\n      case BACKSPACE_STRING:\n        if (word.length > 0) setWord(word.substring(0, word.length - 1));\n        break;\n      default:\n        if (word.length >= wordLength) return;\n        setWord(`${word}${key}`.toLowerCase());\n    }\n  }, [wordLength, word, onSubmit, isFinished]);\n\n\n  const handleUserKeyPress = useCallback((event:KeyboardEvent) => {\n    const { key, keyCode } = event;\n\n    let keyString;\n\n    switch (keyCode) {\n      case ENTER:\n        keyString = ENTER_STRING;\n        break;\n      case DELETE:\n      case BACKSPACE:\n        keyString = BACKSPACE_STRING;\n        break;\n      default:\n        if(keyCode >= 65 && keyCode <= 90) keyString = key;\n    }\n\n    if (keyString) handleKey(keyString);\n  }, [handleKey]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleUserKeyPress);\n    return () => {\n        window.removeEventListener(\"keydown\", handleUserKeyPress);\n    };\n  }, [handleUserKeyPress]);\n\n  useEffect(() => {\n    setWord('');\n  }, [roundNumber]);\n\n  const currentGuess = word.split('').map(letter => ({ letter }));\n\n  return (\n    <React.Fragment>\n      <div className=\"flex-grow-1 position-relative mt-2\">\n        <div className=\"position-relative\">\n          <SwitchTransition>\n            <CSSTransition\n              key={roundNumber}\n              addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n              classNames='fade'\n            >\n              <WordGrid\n                couldNotSubmit={couldNotSubmit}\n                previousGuesses={previousGuesses.concat([currentGuess])}\n                wordLength={wordLength}\n              />\n            </CSSTransition>\n          </SwitchTransition>\n          {alignChildren}\n        </div>\n        {children}\n      </div>\n      <Keyboard\n        layoutName=\"default\"\n        layout={KEYBOARD_LAYOUT}\n        theme={\"hg-theme-default word-race\"}\n        buttonTheme={buttonThemes}\n        display={KEYBOARD_DISPLAY}\n        onKeyPress={handleKey}\n      />\n    </React.Fragment>\n\n  );\n}\n","import styled, { keyframes } from 'styled-components';\nimport { flipInX } from 'react-animations';\n\nconst flipInXAnimation = keyframes`${flipInX}`;\n\nconst FlipDiv = styled.div`\n  animation: 1s ${flipInXAnimation};\n`;\n\ntype Props = {\n  score?: number;\n}\n\nexport default function Score({ score }: Props) {\n  const ComponentType = (score && score !== 0) ? FlipDiv : 'div';\n\n  return <ComponentType className=\"score\" key={score}>{score}</ComponentType>;\n}\n","import { cloneDeep } from 'lodash';\nimport Row from './board/row';\nimport { GameState, LetterGuess } from './constants';\nimport { findBestGuess } from './helpers/word_helpers';\nimport Score from './score_board/score';\n\ntype Props = {\n  gameState: GameState;\n  playerId: string;\n}\n\nexport default function ScoreBoard({ gameState, playerId }: Props) {\n  const players = gameState.players.map((player) => {\n    if (!player.name) return null;\n\n    const playerGuesses = gameState.game?.guesses?.[player.id];\n    let lastGuess: LetterGuess[] | undefined;\n\n    if (playerGuesses) {\n      if (gameState.game?.nextWordAt) {\n        lastGuess = findBestGuess(playerGuesses);\n      } else {\n        lastGuess = cloneDeep(playerGuesses[playerGuesses.length - 1] || []);\n        lastGuess.forEach((guess) => guess.letter = '');\n      }\n    }\n\n    return (\n      <div className={`player-card mb-2 ${playerId === player.id ? 'highlight' : ''}`} key={player.id}>\n        <Score score={gameState.game?.scores?.[player.id] || 0} />\n        <div className=\"player-info\">\n          <div className=\"player-name\">\n            {player.name}\n          </div>\n          <div className=\"player-guess\">\n            <Row wordLength={5} content={lastGuess} />\n          </div>\n        </div>\n      </div>\n    );\n  });\n\n\n\n  return (\n    <div className=\"scoreboard d-none d-sm-block\">\n      {players}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\ntype Props = {\n  toTime: Date;\n}\n\nconst calculateTimeLeft = (toTime: Date) => {\n  const currentTime = new Date();\n  const difference = toTime.getTime() - currentTime.getTime();\n  return Math.max(Math.floor((difference / 1000)), -1);\n};\n\nexport default function Timer({ toTime }: Props) {\n\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft(toTime));\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimeLeft(calculateTimeLeft(toTime));\n    }, 250);\n    return () => clearInterval(interval);\n  }, [toTime]);\n\n  return (\n    <span>{timeLeft + 1}</span>\n  );\n}\n","import styled, { keyframes } from 'styled-components';\nimport { fadeIn } from 'react-animations';\nimport Timer from \"./timer\";\n\nconst fadeInAnimation = keyframes`${fadeIn}`;\n\nconst FadeInDiv = styled.div`\n  animation: 1s ${fadeInAnimation};\n`;\n\ntype Props = {\n  nextWordAt?: Date;\n  roundEndAt?: Date;\n}\n\nexport default function CountDown({ nextWordAt, roundEndAt }: Props) {\n  if (!nextWordAt && !roundEndAt) return <div></div>;\n\n  const text = roundEndAt ? 'Round Ends In:' : 'Next Word In:';\n\n  return (\n    <FadeInDiv className=\"countdown mb-2\">\n      <div>{text}</div>\n      <div className=\"time-left\">\n        <Timer toTime={nextWordAt || roundEndAt || new Date()} />\n      </div>\n\n    </FadeInDiv>\n  );\n}\n","import styled, { keyframes } from 'styled-components';\nimport { fadeInUp } from 'react-animations';\nimport { Player } from '../constants';\n\nconst fadeInAnimation = keyframes`${fadeInUp}`;\n\nconst FadeInDiv = styled.h3`\n  animation: 1s ${fadeInAnimation};\n`;\n\ntype Props = {\n  players: Player[];\n  playerId: string;\n}\n\nexport default function PlayerList({ players, playerId }: Props) {\n  const playerList = players.map((player) => {\n    return (\n      <FadeInDiv key={player.id} className=\"my-3\">\n        <span className={player.id === playerId ? 'highlight-player' : ''}>\n          {player.name}\n        </span>\n      </FadeInDiv>\n    )\n  });\n\n  return <div>{playerList}</div>;\n}\n","import styled, { keyframes } from 'styled-components';\nimport { fadeIn } from 'react-animations';\nimport { GameState } from '../constants';\nimport { reverse, sortBy } from 'lodash';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons';\n\nconst fadeInAnimation = keyframes`${fadeIn}`;\n\nconst FadeInDiv = styled.h3`\n  animation: 1.5s ${fadeInAnimation};\n`;\n\ntype Props = {\n  gameState: GameState;\n  onStartNewGame?: () => void;\n}\n\nexport default function GameEnd({ gameState, onStartNewGame }: Props) {\n  const sortedPlayers = reverse(sortBy(gameState.players, player => gameState.game?.scores?.[player.id] || 0));\n\n  const playerList = sortedPlayers.map((player, i) => {\n    if (!player.name) return null;\n\n    const score = gameState.game?.scores?.[player.id] || 0;\n\n    return (\n      <div className=\"game-results\">\n        <div className=\"player-card\">\n          <div className=\"score\">{score}</div>\n          <div className=\"player-info flex-grow-1\">{player.name}</div>\n          {i === 0 && (\n            <div className=\"p-3 align-self-center text-warning\">\n              <FontAwesomeIcon icon={faTrophy} size=\"lg\"/>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  });\n\n  return (\n    <FadeInDiv className=\"my-5\">\n      <h4 className=\"text-center mb-3\">Congratulations!</h4>\n      {playerList}\n      {onStartNewGame && (\n        <div className=\"text-center mt-4\">\n          <button className=\"btn btn-light mb-5 start-button\" onClick={onStartNewGame}>NEW GAME</button>\n        </div>\n      )}\n    </FadeInDiv>);\n}\n","import styled, { keyframes } from 'styled-components';\nimport { fadeIn } from 'react-animations';\n\nconst fadeInAnimation = keyframes`${fadeIn}`;\n\nconst FadeDiv = styled.div`\n  animation: 0.5s ${fadeInAnimation};\n`;\n\ntype Props = {\n  previousWords: string[];\n}\n\nexport default function PreviousWords({ previousWords }: Props) {\n  if (previousWords.length === 0) return null;\n\n  return (\n    <FadeDiv className='previous-words my-1'>\n      <div>Previous Word:</div>\n      <div className='previous-word'>{previousWords[previousWords.length - 1]}</div>\n    </FadeDiv>\n  );\n}\n","import { reverse, sortBy } from 'lodash';\nimport { GameState } from '../constants';\n\ntype Props = {\n  gameState: GameState;\n  playerId: string;\n}\n\nexport default function MobileScoreBoard({ playerId, gameState }: Props) {\n  const sortedPlayers = reverse(sortBy(gameState.players, player => gameState.game?.scores?.[player.id] || 0));\n  const nextHighestPlayer = sortedPlayers[0].id === playerId ? sortedPlayers[1] : sortedPlayers[0];\n\n\n  return (\n    <div>\n      <table>\n        <tbody>\n          <tr>\n            <td>Score:</td>\n            <td className=\"px-2\">{gameState.game?.scores?.[playerId] || 0}</td>\n          </tr>\n          {nextHighestPlayer && (\n            <tr>\n              <td>{sortedPlayers[0]?.name}:</td>\n              <td className=\"px-2\">{gameState.game?.scores?.[nextHighestPlayer.id] || 0}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import styled, { keyframes } from 'styled-components';\nimport { fadeIn } from 'react-animations';\nimport Timer from \"../score_board/timer\";\n\nconst fadeInAnimation = keyframes`${fadeIn}`;\n\nconst FadeInDiv = styled.div`\n  animation: 1s ${fadeInAnimation};\n`;\n\ntype Props = {\n  nextWordAt?: Date;\n  roundEndAt?: Date;\n}\n\nexport default function MobileCountDown({ nextWordAt, roundEndAt }: Props) {\n  if (!nextWordAt && !roundEndAt) return <div></div>;\n\n  const text = roundEndAt ? 'Round Ends In: ' : 'Next Word In: ';\n\n  return (\n    <FadeInDiv className=\"text-end\">\n      {text}\n      <Timer toTime={nextWordAt || roundEndAt || new Date()} />\n    </FadeInDiv>\n  );\n}\n","import styled, { keyframes } from 'styled-components';\nimport { fadeIn } from 'react-animations';\n\nconst fadeInAnimation = keyframes`${fadeIn}`;\n\nconst FadeDiv = styled.div`\n  animation: 0.5s ${fadeInAnimation};\n`;\n\ntype Props = {\n  previousWords: string[];\n}\n\nexport default function MobilePreviousWord({ previousWords }: Props) {\n  if (previousWords.length === 0) return null;\n\n  return (\n    <FadeDiv>\n      <div>Previous Word: {previousWords[previousWords.length - 1]}</div>\n    </FadeDiv>\n  );\n}\n","\nimport React from \"react\";\nimport Timer from \"../score_board/timer\";\n\ntype Props = {\n  isOwner: boolean;\n  gameStartAt?: Date;\n  roomCode: string;\n}\n\nexport default function GameStartHeader({ isOwner, gameStartAt, roomCode }: Props) {\n  let header;\n\n  if (isOwner) {\n    header = (\n      <React.Fragment>\n        <h5>Waiting for more players to join.</h5>\n        <h5>When you are ready to start the game, press START!</h5>\n      </React.Fragment>\n    );\n  }\n  else if (gameStartAt) {\n    header = (\n      <React.Fragment>\n        <h5>Waiting for players. The game will start automatically in </h5>\n        <h4><Timer toTime={gameStartAt} /></h4>\n      </React.Fragment>\n    );\n  }\n  else {\n    header = <h5>Waiting for the host to start the game.</h5>;\n  }\n\n  return (\n    <React.Fragment>\n      {header}\n      <div>\n        <div className=\"alert alert-info my-5 d-inline-block\">\n          Your room code is <strong>{roomCode}</strong>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n","import { useState } from \"react\";\nimport { Col, Container, Form, Row, Button, Alert } from \"react-bootstrap\"\nimport { Socket } from \"socket.io-client\";\nimport { ACTION__SET_NAME } from \"./constants\";\n\ntype Props = {\n  roomCode: string;\n  socket: Socket;\n}\n\nexport default function NameInput({ roomCode, socket }: Props) {\n  const [name, setName] = useState('');\n  const [sending, setSending] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const handleInput = (newName: string) => {\n    setName(newName.substring(0, 11))\n  }\n\n  const submitName = () => {\n    setSending(true);\n\n    socket.emit(ACTION__SET_NAME, name, (response: { error: string | undefined }) => {\n      setSending(false);\n      setError(response.error)\n    });\n  }\n\n  return (\n    <Container className=\"name-input\">\n      {error && (\n        <div className=\"text-center my-5\">\n          <Alert className=\"d-inline-block\" variant=\"info\">{error}</Alert>\n        </div>\n      )}\n      <Row className=\"justify-content-md-center\">\n        <Col className=\"py-2 py-md-0\" md={4}>\n          <Form.Group className=\"mb-3\">\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Your Name\"\n              value={name}\n              onChange={e => handleInput(e.target.value)}\n            />\n          </Form.Group>\n        </Col>\n        <Col className=\"py-2 py-md-0 text-center\" sm=\"auto\">\n          <Button variant=\"light\" disabled={sending} onClick={submitName}>\n            Join\n          </Button>\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"text-center\">\n          <Form.Text className=\"hint my-1\">\n            This is what we'll show to other players. It's ok to leave this blank.\n          </Form.Text>\n        </Col>\n      </Row>\n    </Container>\n  );\n\n}\n","import React from \"react\";\nimport { Socket } from \"socket.io-client\";\nimport {\n    ACTION__START_GAME,\n    ACTION__SUBMIT_GUESS,\n    GameState,\n    IncomingGameState\n  } from \"./constants\";\nimport WordInput from \"./word_input\";\n\nimport ScoreBoard from \"./score_board\";\nimport CountDown from \"./score_board/count_down\";\nimport PlayerList from \"./ui/player_list\";\nimport GameEnd from \"./ui/game_end\";\nimport PreviousWords from \"./score_board/previous_words\";\nimport MobileScoreBoard from \"./ui/mobile_score_board\";\nimport MobileCountDown from \"./ui/mobile_count_down\";\nimport MobilePreviousWord from \"./ui/mobile_previous_word\";\nimport { Container } from \"react-bootstrap\";\nimport GameStartHeader from \"./ui/game_start_header\";\nimport { find } from \"lodash\";\nimport NameInput from \"./name_input\";\n\ntype Props = {\n  admin: boolean;\n  playerId: string;\n  roomCode: string;\n  socket: Socket\n};\n\nexport default class WordRace extends React.Component<Props, GameState> {\n  state: GameState = {\n    players: [],\n    ownerId: ''\n  }\n\n  isOwner = () => this.state.ownerId === this.props.playerId;\n\n  componentDidMount() {\n    this.props.socket.on('gameState', (gameState: IncomingGameState) => {\n      const nextState: GameState = {\n        players: gameState.players,\n        ownerId: gameState.ownerId\n      };\n\n      if (gameState.gameStartIn) nextState.gameStartAt = new Date(Date.now() + gameState.gameStartIn);\n\n      if (gameState.game) {\n        let nextWordAt, roundEndAt;\n\n        if (gameState.game?.nextWordIn) nextWordAt = new Date(Date.now() + gameState.game.nextWordIn);\n        if (gameState.game?.roundEndIn) roundEndAt = new Date(Date.now() + gameState.game.roundEndIn);\n\n        nextState.game = {\n          ...gameState.game,\n          nextWordAt,\n          roundEndAt\n        }\n      }\n\n      this.setState(nextState);\n    });\n  }\n\n  playerForSelf = () => {\n    return find(this.state.players, player => player.id === this.props.playerId);\n  }\n\n  hasName = () => {\n    return !!this.playerForSelf()?.name\n  }\n\n  startGame = () => {\n    this.props.socket.emit(ACTION__START_GAME);\n  }\n\n  submitGuess = (guess: string) => {\n    this.props.socket.emit(ACTION__SUBMIT_GUESS, guess);\n  }\n\n  renderControls() {\n    if (!this.state.game) {\n      return (\n        <Container className=\"text-center my-5\">\n          <GameStartHeader\n            isOwner={this.isOwner()}\n            roomCode={this.props.roomCode}\n            gameStartAt={this.state.gameStartAt}\n          />\n          {this.isOwner() && <button className=\"btn btn-light mb-5 start-button\" onClick={this.startGame}>START</button>}\n          <PlayerList players={this.state.players} playerId={this.props.playerId} />\n        </Container>\n      );\n    }\n  }\n\n  renderGame() {\n    if (!this.state.game) return;\n\n    if (this.state.game.gameEnded) {\n      return <GameEnd gameState={this.state} onStartNewGame={this.isOwner() ? this.startGame : undefined} />;\n    }\n\n    const alignChildren = (\n      <div className=\"d-none d-sm-block\">\n        <ScoreBoard gameState={this.state} playerId={this.props.playerId} />\n        <CountDown nextWordAt={this.state.game?.nextWordAt} roundEndAt={this.state.game?.roundEndAt} />\n        <PreviousWords previousWords={this.state.game.previousWords} />\n      </div>\n    );\n\n    return (\n      <React.Fragment>\n        <WordInput\n          alignChildren={alignChildren}\n          freeze={!!this.state.game.nextWordAt}\n          wordLength={5}\n          previousGuesses={this.state.game.guesses[this.props.playerId] || []}\n          roundNumber={this.state.game.roundNumber}\n          onSubmit={this.submitGuess}\n        >\n          <div className=\"d-flex d-sm-none justify-content-between\">\n            <div>\n              <MobileScoreBoard gameState={this.state} playerId={this.props.playerId} />\n            </div>\n            <div>\n              <MobilePreviousWord previousWords={this.state.game.previousWords} />\n              <MobileCountDown nextWordAt={this.state.game?.nextWordAt} roundEndAt={this.state.game?.roundEndAt} />\n            </div>\n          </div>\n        </WordInput>\n      </React.Fragment>\n    )\n  }\n\n  render() {\n    if (!this.hasName()) {\n      return <NameInput roomCode={this.props.roomCode} socket={this.props.socket} />;\n    }\n\n    return (\n      <div className=\"game game-grid flex-column justify-content-start align-items-center\">\n        {this.renderGame()}\n        {this.renderControls()}\n      </div>\n    );\n  }\n}\n","import axios, { AxiosError } from \"axios\";\nimport React, { FunctionComponent, useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport io, { Socket } from 'socket.io-client';\nimport { useHistory } from \"react-router-dom\";\n\nimport WordRace from './word_race';\n\nconst Game:FunctionComponent = () => {\n  const history = useHistory();\n  const { id } = useParams<{ id: string }>();\n  const [playerId, setPlayerId] = useState<string | null>();\n  const [secret, setSecret] = useState<string | null>();\n  const [socket, setSocket] = useState<Socket | null>();\n\n  useEffect(() => {\n    axios.post(`${process.env.REACT_APP_API_ROOT || ''}/join`, { roomCode: id }, { withCredentials: true })\n      .then((response) => {\n        setPlayerId(response.data.playerId);\n        setSecret(response.data.secret);\n      })\n      .catch((error: Error | AxiosError)=> {\n        if (!axios.isAxiosError(error)) return;\n\n        if (error.response?.status === 404) {\n          history.replace('/', { notFound: id });\n        }\n\n        if (error.response?.status === 422) {\n          history.replace(`/join/${id}`, { notFound: id });\n        }\n      });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!secret || !playerId) return;\n\n    const newSocket = io(`${process.env.REACT_APP_API_ROOT || 'http://localhost:3000'}`, {\n      query: {\n        roomCode: id,\n        playerId,\n        secret\n      }\n    });\n\n    setSocket(newSocket);\n  }, [id, playerId, secret]);\n\n  return (\n    <div className=\"game-space\">\n      {socket && playerId && (\n        <React.Fragment>\n          <WordRace\n            admin={process.env.NODE_ENV === 'development'}\n            roomCode={id}\n            playerId={playerId}\n            socket={socket}\n          />\n        </React.Fragment>\n      )}\n      {!socket && <h1 className=\"text-center\">Connecting ...</h1>}\n    </div>\n  )\n}\n\nexport default Game;\n","import { useEffect, useState } from \"react\"\nimport axios, { AxiosError } from 'axios';\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport SplashHeader from \"./splash_header\";\n\nexport default function JoinGame() {\n  const history = useHistory();\n  const { id } = useParams<{ id: string }>();\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const joinGame = () => {\n    axios.post(`${process.env.REACT_APP_API_ROOT || ''}/join_room`, { roomCode: id }, { withCredentials: true })\n      .then((response) => history.push(`/game/${response.data.roomCode}`))\n      .catch((error: Error | AxiosError)=> {\n        if (axios.isAxiosError(error))  {\n          setErrors(error.response?.data?.errors || []);\n        }\n      });\n  }\n\n  useEffect(() => {\n    setTimeout(joinGame, 2000);\n  }, []);\n\n  return (\n    <div className=\"splash\">\n      <div className=\"px-4 text-center\">\n        <h1 className=\"display-4 fw-bold\">Wordversary.</h1>\n        <div className=\"col-lg-6 mx-auto\">\n          <p className=\"lead mb-5\">Race against your friends to solve word puzzles!</p>\n          <div className=\"mb-5\">\n\n            <SplashHeader errors={errors} />\n            <div>\n              <h1 className=\"mt-0 mb-3 text-center\">Joining {id}</h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport Splash from './components/splash';\nimport './App.scss';\nimport Game from './components/word_race/game';\nimport JoinGame from './components/join_game';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/game/:id\">\n          <Game />\n        </Route>\n        <Route path=\"/join/:id\">\n          <JoinGame />\n        </Route>\n        <Route path=\"/\">\n          <Splash />\n        </Route>\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}